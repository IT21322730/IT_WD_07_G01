// Generated by view binder compiler. Do not edit!
package com.example.helasaviya_delivery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.helasaviya_delivery.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UpdateDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnUpdateData;

  @NonNull
  public final TextView textView22;

  @NonNull
  public final TextView textView23;

  @NonNull
  public final TextView textView24;

  @NonNull
  public final TextView textView25;

  @NonNull
  public final TextView textView26;

  @NonNull
  public final TextView textView27;

  @NonNull
  public final TextView textView28;

  @NonNull
  public final TextView txtaddress1;

  @NonNull
  public final TextView txtaddress2;

  @NonNull
  public final TextView txtname;

  @NonNull
  public final TextView txtphone;

  @NonNull
  public final TextView txtprovince;

  @NonNull
  public final EditText txtstatus;

  @NonNull
  public final TextView txttotal;

  private UpdateDetailsBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnUpdateData,
      @NonNull TextView textView22, @NonNull TextView textView23, @NonNull TextView textView24,
      @NonNull TextView textView25, @NonNull TextView textView26, @NonNull TextView textView27,
      @NonNull TextView textView28, @NonNull TextView txtaddress1, @NonNull TextView txtaddress2,
      @NonNull TextView txtname, @NonNull TextView txtphone, @NonNull TextView txtprovince,
      @NonNull EditText txtstatus, @NonNull TextView txttotal) {
    this.rootView = rootView;
    this.btnUpdateData = btnUpdateData;
    this.textView22 = textView22;
    this.textView23 = textView23;
    this.textView24 = textView24;
    this.textView25 = textView25;
    this.textView26 = textView26;
    this.textView27 = textView27;
    this.textView28 = textView28;
    this.txtaddress1 = txtaddress1;
    this.txtaddress2 = txtaddress2;
    this.txtname = txtname;
    this.txtphone = txtphone;
    this.txtprovince = txtprovince;
    this.txtstatus = txtstatus;
    this.txttotal = txttotal;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UpdateDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UpdateDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.update_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UpdateDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnUpdateData;
      Button btnUpdateData = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateData == null) {
        break missingId;
      }

      id = R.id.textView22;
      TextView textView22 = ViewBindings.findChildViewById(rootView, id);
      if (textView22 == null) {
        break missingId;
      }

      id = R.id.textView23;
      TextView textView23 = ViewBindings.findChildViewById(rootView, id);
      if (textView23 == null) {
        break missingId;
      }

      id = R.id.textView24;
      TextView textView24 = ViewBindings.findChildViewById(rootView, id);
      if (textView24 == null) {
        break missingId;
      }

      id = R.id.textView25;
      TextView textView25 = ViewBindings.findChildViewById(rootView, id);
      if (textView25 == null) {
        break missingId;
      }

      id = R.id.textView26;
      TextView textView26 = ViewBindings.findChildViewById(rootView, id);
      if (textView26 == null) {
        break missingId;
      }

      id = R.id.textView27;
      TextView textView27 = ViewBindings.findChildViewById(rootView, id);
      if (textView27 == null) {
        break missingId;
      }

      id = R.id.textView28;
      TextView textView28 = ViewBindings.findChildViewById(rootView, id);
      if (textView28 == null) {
        break missingId;
      }

      id = R.id.txtaddress1;
      TextView txtaddress1 = ViewBindings.findChildViewById(rootView, id);
      if (txtaddress1 == null) {
        break missingId;
      }

      id = R.id.txtaddress2;
      TextView txtaddress2 = ViewBindings.findChildViewById(rootView, id);
      if (txtaddress2 == null) {
        break missingId;
      }

      id = R.id.txtname;
      TextView txtname = ViewBindings.findChildViewById(rootView, id);
      if (txtname == null) {
        break missingId;
      }

      id = R.id.txtphone;
      TextView txtphone = ViewBindings.findChildViewById(rootView, id);
      if (txtphone == null) {
        break missingId;
      }

      id = R.id.txtprovince;
      TextView txtprovince = ViewBindings.findChildViewById(rootView, id);
      if (txtprovince == null) {
        break missingId;
      }

      id = R.id.txtstatus;
      EditText txtstatus = ViewBindings.findChildViewById(rootView, id);
      if (txtstatus == null) {
        break missingId;
      }

      id = R.id.txttotal;
      TextView txttotal = ViewBindings.findChildViewById(rootView, id);
      if (txttotal == null) {
        break missingId;
      }

      return new UpdateDetailsBinding((ConstraintLayout) rootView, btnUpdateData, textView22,
          textView23, textView24, textView25, textView26, textView27, textView28, txtaddress1,
          txtaddress2, txtname, txtphone, txtprovince, txtstatus, txttotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
